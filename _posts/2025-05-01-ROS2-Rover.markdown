---
layout: post
title:  "ROS2-Rover"
date:   2025-05-01 10:00:00 +0200
categories: modelado-simulacion
---

## Modelating Rover on ROS 2

Este proyecto se basa en la creación y modelación de un Rover en ROS 2. 
En una primera fase se realizó la modelación del Rover en Blender, para su posterior adición a Gazebo y su control mediante ROS 2.

## **Plataformas Utilizadas**

- **Blender**
- **Pybullet**
- **Gazebo**
- **Moveit**

## **Arbol De Transformadas**

![Animación de ejemplo](/assets/images/Captura%20desde%202025-05-01%2018-44-34.png)


## **Grafos Del Rover**

- **Grafo De Aceleracion**
![Animación de ejemplo](/assets/images/grafico_aceleracion.png)


Aquí se puede ver cómo cambia la aceleración del rover a lo largo del movimiento. Al principio los valores son bastante estables, pero en el momento en que el rover se mueve hacia atrás y hace maniobras para posicionarse, empiezan a aparecer picos. Los picos más grandes se ven cuando el robot avanza con el cubo ya dentro, que es cuando más se nota el peso y los pequeños baches o ajustes del terreno.
Se nota totalmente, cuando el robot esta parado y solamente le influyen las fuerzas correspondientes a las físicas, como por ejemplo la gravedad en el eje z.

- **Grafo De Posicion**
![Animación de ejemplo](/assets/images/grafico_posicion.png)

En esta gráfica se refleja claramente cuándo el rover da marcha atrás y luego empieza a moverse con el cubo ya dentro. Algunas ruedas tienen más movimiento que otras, debido a las pequeñas correcciones para posicionar el **scara** encima del cubo, y después para salir del sitio.

- **Grafo De Gasto**
![Animación de ejemplo](/assets/images/grafico_gasto_parcial.png)

Aquí se ve cuándo el brazo empieza a actuar. Los picos coinciden con el momento en que baja para agarrar el cubo y luego lo sube. Hay una parte en la que la fuerza baja un poco, lo que se debe a cuando ya tiene el cubo asegurado y está en movimiento más suave o en reposo momentáneo. Después vuelve a haber fuerza cuando el brazo termina de subir el cubo y lo coloca en el compartimento.

## **Video**
<div style="display: flex; justify-content: center;">
  <video width="500" controls>
    <source src="{{ '/assets/videos/danieljr_rover_.mp4' | relative_url }}" type="video/webm">
    Tu navegador no soporta videos en formato WebM.
  </video>
</div>

## **ROSBAG**
<div style="text-align: center;">
  <a href="https://drive.google.com/drive/folders/1VN2PsVczo4zJnjfGJdyYVtV7DMUfw1vY?usp=sharing" target="_blank">Ver archivos en Google Drive</a>
</div>

---

## **Conclusión**

Este sistema combina detección de líneas mediante sensores infrarrojos, control PD para precisión en el movimiento y comunicación MQTT para supervisión remota. La integración entre Arduino y ESP32 garantiza un sistema eficiente y escalable para futuras mejoras. El sistema es adaptable y permite la incorporación de nuevas funciones como seguimiento de múltiples rutas, reconocimiento de patrones y control por voz.
